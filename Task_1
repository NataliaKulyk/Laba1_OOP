#pragma once
#include <math.h>
#include <iostream>
#include <cstdlib>



class B
{

private:
	double x;
	double y;
	double z;
	
public:
	B(double x, double y, double z)
	{
		this->x = x;
		this->y = y;
		this->z = z;
	}

	double calculate()
	{
		
		double result = 2*z *cos(((abs(x)), 1.3)) - pow(x, 2) / 6;
		result /= (2.1 + sin(pow(abs(z * z * z - y), 0.2)), 2);
		result += pow(log(abs(pow(z, 0.6))), 2);
		return result;
	}

	double getX()
	{
		return x;
	}
	double getY()
	{
		return y;
	}
	double getZ()
	{
		return z;
	}
	

};

class A : public B
{

private:
	double b;

public:

	A(double x, double y, double z, double b) : B(x, y, z)
	{
		this-> b= b;
	}

	double calculate()
	{
		
		double result = pow(abs(getX()), 0.43);
		result += exp(getY() - getX()) + sqrt(pow(abs(getY() * getY() + b), 0.22));
		result /= 1 + pow(getX(), 2) * abs((getY() - (tan(getZ()), 2)));
		return  result;
	}


	double getB()
	{
		return b;
	}

};
